name: Frontend deployment

on:
    push:
        branches: ['main']
        paths-ignore:
            - 'configs/nginx/**'
    workflow_dispatch:
        inputs:
            reason:
                description: 'why'
                required: false
                default: 'just for fun'

env:
    FRONTEND_IMAGE: cr.yandex/crpkimrjqc5g9hklf1c2/tridva-front

jobs:
    build-frontend:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: 'Create env file'
              run: |
                  echo "${{ vars.ENV }}" > .env

            - name: Login to Dockerhub
              uses: docker/login-action@v3
              with:
                  registry: cr.yandex
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Setup Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Frontend
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./configs/deploy/Dockerfile
                  push: true
                  tags: ${{ env.FRONTEND_IMAGE }}

    update-yc:
        needs: [build-frontend]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Copy docker-compose
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.YC_HOST }}
                  username: ${{ secrets.YC_USERNAME }}
                  key: ${{ secrets.ID_RSA }}
                  source: 'configs/yc/*'
                  target: '~/frontend'

            - name: executing remote ssh commands using password
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.YC_HOST }}
                  username: ${{ secrets.YC_USERNAME }}
                  key: ${{ secrets.ID_RSA }}
                  script: |
                      cd ~/frontend && 
                      docker compose -f configs/yc/docker-compose.yaml stop frontend && 
                      docker compose -f configs/yc/docker-compose.yaml pull frontend && 
                      docker compose -f configs/yc/docker-compose.yaml up -d frontend &&
                      docker system prune -f
